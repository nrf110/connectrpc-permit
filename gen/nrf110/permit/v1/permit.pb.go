// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: nrf110/permit/v1/permit.proto

package permitv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BulkCheckMode int32

const (
	BulkCheckMode_all_of BulkCheckMode = 0
	BulkCheckMode_any_of BulkCheckMode = 1
)

// Enum value maps for BulkCheckMode.
var (
	BulkCheckMode_name = map[int32]string{
		0: "all_of",
		1: "any_of",
	}
	BulkCheckMode_value = map[string]int32{
		"all_of": 0,
		"any_of": 1,
	}
)

func (x BulkCheckMode) Enum() *BulkCheckMode {
	p := new(BulkCheckMode)
	*p = x
	return p
}

func (x BulkCheckMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BulkCheckMode) Descriptor() protoreflect.EnumDescriptor {
	return file_nrf110_permit_v1_permit_proto_enumTypes[0].Descriptor()
}

func (BulkCheckMode) Type() protoreflect.EnumType {
	return &file_nrf110_permit_v1_permit_proto_enumTypes[0]
}

func (x BulkCheckMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BulkCheckMode.Descriptor instead.
func (BulkCheckMode) EnumDescriptor() ([]byte, []int) {
	return file_nrf110_permit_v1_permit_proto_rawDescGZIP(), []int{0}
}

var file_nrf110_permit_v1_permit_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         3000,
		Name:          "nrf110.permit.v1.resource_id",
		Tag:           "varint,3000,opt,name=resource_id",
		Filename:      "nrf110/permit/v1/permit.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         3001,
		Name:          "nrf110.permit.v1.tenant_id",
		Tag:           "varint,3001,opt,name=tenant_id",
		Filename:      "nrf110/permit/v1/permit.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         3002,
		Name:          "nrf110.permit.v1.attribute_name",
		Tag:           "bytes,3002,opt,name=attribute_name",
		Filename:      "nrf110/permit/v1/permit.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         3000,
		Name:          "nrf110.permit.v1.resource_type",
		Tag:           "bytes,3000,opt,name=resource_type",
		Filename:      "nrf110/permit/v1/permit.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         3000,
		Name:          "nrf110.permit.v1.action",
		Tag:           "bytes,3000,opt,name=action",
		Filename:      "nrf110/permit/v1/permit.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*BulkCheckMode)(nil),
		Field:         3001,
		Name:          "nrf110.permit.v1.bulk_check_mode",
		Tag:           "varint,3001,opt,name=bulk_check_mode,enum=nrf110.permit.v1.BulkCheckMode",
		Filename:      "nrf110/permit/v1/permit.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional bool resource_id = 3000;
	E_ResourceId = &file_nrf110_permit_v1_permit_proto_extTypes[0]
	// optional bool tenant_id = 3001;
	E_TenantId = &file_nrf110_permit_v1_permit_proto_extTypes[1]
	// optional string attribute_name = 3002;
	E_AttributeName = &file_nrf110_permit_v1_permit_proto_extTypes[2]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional string resource_type = 3000;
	E_ResourceType = &file_nrf110_permit_v1_permit_proto_extTypes[3]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional string action = 3000;
	E_Action = &file_nrf110_permit_v1_permit_proto_extTypes[4]
	// optional nrf110.permit.v1.BulkCheckMode bulk_check_mode = 3001;
	E_BulkCheckMode = &file_nrf110_permit_v1_permit_proto_extTypes[5]
)

var File_nrf110_permit_v1_permit_proto protoreflect.FileDescriptor

var file_nrf110_permit_v1_permit_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6e, 0x72, 0x66, 0x31, 0x31, 0x30, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x6e, 0x72, 0x66, 0x31, 0x31, 0x30, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x76,
	0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x27,
	0x0a, 0x0d, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x61, 0x6c, 0x6c, 0x5f, 0x6f, 0x66, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x61,
	0x6e, 0x79, 0x5f, 0x6f, 0x66, 0x10, 0x01, 0x3a, 0x42, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb8, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x3e, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb9, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x48, 0x0a, 0x0e, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xba, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x45, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb8, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x37, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb8, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x6b, 0x0a, 0x0f, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb9, 0x17, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x6e, 0x72, 0x66, 0x31, 0x31, 0x30, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x0d, 0x62, 0x75, 0x6c, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x42, 0xc8, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x72, 0x66, 0x31, 0x31,
	0x30, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x72, 0x66, 0x31, 0x31, 0x30, 0x2f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x6e, 0x72, 0x66, 0x31, 0x31, 0x30, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x74, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x4e, 0x50, 0x58, 0xaa, 0x02, 0x10, 0x4e, 0x72, 0x66, 0x31, 0x31, 0x30, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x4e, 0x72, 0x66, 0x31, 0x31, 0x30, 0x5c,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x4e, 0x72, 0x66, 0x31,
	0x31, 0x30, 0x5c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x4e, 0x72, 0x66, 0x31, 0x31,
	0x30, 0x3a, 0x3a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nrf110_permit_v1_permit_proto_rawDescOnce sync.Once
	file_nrf110_permit_v1_permit_proto_rawDescData = file_nrf110_permit_v1_permit_proto_rawDesc
)

func file_nrf110_permit_v1_permit_proto_rawDescGZIP() []byte {
	file_nrf110_permit_v1_permit_proto_rawDescOnce.Do(func() {
		file_nrf110_permit_v1_permit_proto_rawDescData = protoimpl.X.CompressGZIP(file_nrf110_permit_v1_permit_proto_rawDescData)
	})
	return file_nrf110_permit_v1_permit_proto_rawDescData
}

var file_nrf110_permit_v1_permit_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nrf110_permit_v1_permit_proto_goTypes = []any{
	(BulkCheckMode)(0),                  // 0: nrf110.permit.v1.BulkCheckMode
	(*descriptorpb.FieldOptions)(nil),   // 1: google.protobuf.FieldOptions
	(*descriptorpb.MessageOptions)(nil), // 2: google.protobuf.MessageOptions
	(*descriptorpb.MethodOptions)(nil),  // 3: google.protobuf.MethodOptions
}
var file_nrf110_permit_v1_permit_proto_depIdxs = []int32{
	1, // 0: nrf110.permit.v1.resource_id:extendee -> google.protobuf.FieldOptions
	1, // 1: nrf110.permit.v1.tenant_id:extendee -> google.protobuf.FieldOptions
	1, // 2: nrf110.permit.v1.attribute_name:extendee -> google.protobuf.FieldOptions
	2, // 3: nrf110.permit.v1.resource_type:extendee -> google.protobuf.MessageOptions
	3, // 4: nrf110.permit.v1.action:extendee -> google.protobuf.MethodOptions
	3, // 5: nrf110.permit.v1.bulk_check_mode:extendee -> google.protobuf.MethodOptions
	0, // 6: nrf110.permit.v1.bulk_check_mode:type_name -> nrf110.permit.v1.BulkCheckMode
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	6, // [6:7] is the sub-list for extension type_name
	0, // [0:6] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_nrf110_permit_v1_permit_proto_init() }
func file_nrf110_permit_v1_permit_proto_init() {
	if File_nrf110_permit_v1_permit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nrf110_permit_v1_permit_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 6,
			NumServices:   0,
		},
		GoTypes:           file_nrf110_permit_v1_permit_proto_goTypes,
		DependencyIndexes: file_nrf110_permit_v1_permit_proto_depIdxs,
		EnumInfos:         file_nrf110_permit_v1_permit_proto_enumTypes,
		ExtensionInfos:    file_nrf110_permit_v1_permit_proto_extTypes,
	}.Build()
	File_nrf110_permit_v1_permit_proto = out.File
	file_nrf110_permit_v1_permit_proto_rawDesc = nil
	file_nrf110_permit_v1_permit_proto_goTypes = nil
	file_nrf110_permit_v1_permit_proto_depIdxs = nil
}
